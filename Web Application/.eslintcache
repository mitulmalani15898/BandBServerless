[{"D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\index.js":"1","D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\App.js":"2","D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\providers\\AuthProvider\\index.js":"3","D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\hotel\\UserRoomBookings.js":"4","D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\hotel\\RoomBooking.js":"5","D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\hotel\\Rooms.js":"6","D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\components\\Visualization\\Visualization.js":"7","D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\components\\Visualization\\Report.js":"8","D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\components\\Recommendations\\Preferences.jsx":"9","D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\components\\Recommendations\\Pass.jsx":"10","D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\components\\Footer\\Footer.jsx":"11","D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\components\\Feedback\\Feedback.jsx":"12","D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\components\\Login\\index.js":"13","D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\components\\Navbar\\index.js":"14","D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\components\\Signup\\index.js":"15","D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\hotel\\HotelMgmtConstants.js":"16","D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\hotel\\BookingDetailsCard.js":"17","D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\hotel\\RoomType.js":"18","D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\utility\\constants.js":"19","D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\utility\\common.js":"20","D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\hotel\\BookingInvoice.js":"21","D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\components\\AuthWrapper\\index.js":"22","D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\components\\SecurityQnA\\index.js":"23","D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\components\\CeasarCipher\\index.js":"24"},{"size":446,"mtime":1658629073051,"results":"25","hashOfConfig":"26"},{"size":3028,"mtime":1658629073035,"results":"27","hashOfConfig":"26"},{"size":4013,"mtime":1658629073052,"results":"28","hashOfConfig":"26"},{"size":3619,"mtime":1658629073050,"results":"29","hashOfConfig":"26"},{"size":4836,"mtime":1658629073048,"results":"30","hashOfConfig":"26"},{"size":4193,"mtime":1658629073049,"results":"31","hashOfConfig":"26"},{"size":3195,"mtime":1658672577788,"results":"32","hashOfConfig":"26"},{"size":3156,"mtime":1658672560902,"results":"33","hashOfConfig":"26"},{"size":13609,"mtime":1658629073043,"results":"34","hashOfConfig":"26"},{"size":6763,"mtime":1658629073042,"results":"35","hashOfConfig":"26"},{"size":743,"mtime":1658629073040,"results":"36","hashOfConfig":"26"},{"size":5250,"mtime":1658629073039,"results":"37","hashOfConfig":"26"},{"size":4041,"mtime":1658670721620,"results":"38","hashOfConfig":"26"},{"size":2427,"mtime":1658630657338,"results":"39","hashOfConfig":"26"},{"size":7472,"mtime":1658670721636,"results":"40","hashOfConfig":"26"},{"size":584,"mtime":1658629073047,"results":"41","hashOfConfig":"26"},{"size":6674,"mtime":1658629073047,"results":"42","hashOfConfig":"26"},{"size":3527,"mtime":1658629073049,"results":"43","hashOfConfig":"26"},{"size":874,"mtime":1658670721644,"results":"44","hashOfConfig":"26"},{"size":895,"mtime":1658629073054,"results":"45","hashOfConfig":"26"},{"size":3836,"mtime":1658629073047,"results":"46","hashOfConfig":"26"},{"size":589,"mtime":1658629073037,"results":"47","hashOfConfig":"26"},{"size":2176,"mtime":1658670721625,"results":"48","hashOfConfig":"26"},{"size":2825,"mtime":1658629073038,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1nc7c42",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\index.js",[],["104","105"],"D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\App.js",[],"D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\providers\\AuthProvider\\index.js",["106"],"import { createContext, useState, useEffect } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\nimport {\r\n  CognitoUser,\r\n  AuthenticationDetails,\r\n  CognitoUserPool,\r\n} from \"amazon-cognito-identity-js\";\r\n\r\nimport {\r\n  cookieMeta,\r\n  USER_POOL_CLIENT_ID,\r\n  USER_POOL_ID,\r\n} from \"../../utility/constants\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst AuthProvider = (props) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getUserData();\r\n  }, []);\r\n\r\n  const getUserData = async () => {\r\n    try {\r\n      const res = await getSession();\r\n      setCurrentUser({\r\n        userId: res[\"custom:userId\"],\r\n        email: res.email,\r\n        firstName: res.name,\r\n        lastName: res.family_name,\r\n        accessToken: res.accessToken.jwtToken,\r\n        idToken: res.idToken.jwtToken,\r\n        refreshToken: res.refreshToken.token,\r\n      });\r\n    } catch (err) {\r\n      console.log(\"getUserData: \", \"user is not logged in.\");\r\n    }\r\n  };\r\n\r\n  const getUserPool = () => {\r\n    const poolData = {\r\n      UserPoolId: USER_POOL_ID,\r\n      ClientId: USER_POOL_CLIENT_ID,\r\n    };\r\n    const userPool = new CognitoUserPool(poolData);\r\n    return userPool;\r\n  };\r\n\r\n  const getSession = async () => {\r\n    return await new Promise((resolve, reject) => {\r\n      const Pool = getUserPool();\r\n      const user = Pool.getCurrentUser();\r\n      if (user) {\r\n        user.getSession(async (err, session) => {\r\n          if (err) {\r\n            reject();\r\n          } else {\r\n            const attributes = await new Promise((resolve, reject) => {\r\n              user.getUserAttributes(function (err, attributes) {\r\n                if (err) {\r\n                  reject(err);\r\n                } else {\r\n                  const results = {};\r\n                  attributes.forEach(\r\n                    ({ Name, Value }) => (results[Name] = Value)\r\n                  );\r\n                  resolve(results);\r\n                }\r\n              });\r\n            });\r\n            resolve({ user, ...session, ...attributes });\r\n          }\r\n        });\r\n      } else {\r\n        reject();\r\n      }\r\n    });\r\n  };\r\n\r\n  const getCognitoUser = (Username) => {\r\n    const Pool = getUserPool();\r\n    const user = new CognitoUser({ Username, Pool });\r\n    return user;\r\n  };\r\n\r\n  const authenticate = async (Username, Password) => {\r\n    return await new Promise((resolve, reject) => {\r\n      const user = getCognitoUser(Username);\r\n\r\n      const authDetails = new AuthenticationDetails({ Username, Password });\r\n\r\n      user.authenticateUser(authDetails, {\r\n        onSuccess: (data) => {\r\n          setCurrentUser({\r\n            userId: data.idToken.payload[\"custom:userId\"],\r\n            email: data.idToken.payload.email,\r\n            firstName: data.idToken.payload.name,\r\n            lastName: data.idToken.payload.family_name,\r\n            accessToken: data.accessToken.jwtToken,\r\n            idToken: data.idToken.jwtToken,\r\n            refreshToken: data.refreshToken.token,\r\n          });\r\n          resolve(data);\r\n        },\r\n        onFailure: (err) => {\r\n          console.log(\"onFailure\", err);\r\n          reject(err);\r\n        },\r\n        newPasswordRequired: (data) => {\r\n          resolve(data);\r\n        },\r\n      });\r\n    });\r\n  };\r\n\r\n  const logout = () => {\r\n    const Pool = getUserPool();\r\n    const user = Pool.getCurrentUser();\r\n    if (user) {\r\n      removeCookies();\r\n      setCurrentUser(null);\r\n      user.signOut();\r\n    }\r\n  };\r\n\r\n  const removeCookies = () => {\r\n    Cookies.remove(\"accessToken\", cookieMeta);\r\n    Cookies.remove(\"idToken\", cookieMeta);\r\n    Cookies.remove(\"refreshToken\", cookieMeta);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        currentUser,\r\n        setCurrentUser,\r\n        authenticate,\r\n        getSession,\r\n        logout,\r\n        removeCookies,\r\n        getCognitoUser,\r\n        getUserPool,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AuthContext, AuthProvider };\r\n","D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\hotel\\UserRoomBookings.js",["107","108","109","110"],"// Author: Akanksha Singh (B00892887)\r\nimport { useState, useEffect } from \"react\";\r\nimport { Tabs, Tab, Container, Row, Col } from \"react-bootstrap\";\r\nimport Axios from \"axios\";\r\nimport BookingDetailsCard from \"./BookingDetailsCard\";\r\nimport * as HotelMgmtConstants from \"./HotelMgmtConstants\";\r\nimport { AuthContext } from \"../providers/AuthProvider\";\r\nimport { useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function UserRoomBookings() {\r\n    const [pastBookings, setPastBookings] = useState([]);\r\n    const [upcomingBookings, setUpcomingBookings] = useState([]);\r\n    const navigate = useNavigate();\r\n    const { currentUser } = useContext(AuthContext);\r\n    console.log(\"Current user is \" + currentUser);\r\n\r\n    useEffect(() => {\r\n        var userId = \"\";\r\n        if (currentUser) {\r\n            userId = currentUser.userId;\r\n        } else {\r\n            alert(\"You are not logged-in, please login to proceed further\");\r\n            navigate(\"/login\");\r\n        }\r\n        console.log(\"User Id is :\" + userId);\r\n        const getBookingsUri =\r\n            HotelMgmtConstants.apiBaseUrl + `/hotel/bookings?userId=${userId}`;\r\n        Axios.get(getBookingsUri)\r\n            .then((response) => {\r\n                console.log(response);\r\n                if (response.status === 200) {\r\n                    processBookings(response.data.bookings);\r\n                } else if (response.status === 404) {\r\n                    alert(\"You have no bookings\");\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"Error in fetching the room bookings\");\r\n            });\r\n    }, []);\r\n\r\n    const processBookings = (bookings) => {\r\n        const now = new Date();\r\n        let pastBookings = [];\r\n        let upcomingBookings = [];\r\n        bookings.map((booking) => {\r\n            if (booking.checkOut < now) {\r\n                pastBookings.push(booking);\r\n            } else {\r\n                upcomingBookings.push(booking);\r\n            }\r\n        });\r\n        setPastBookings(pastBookings);\r\n        setUpcomingBookings(upcomingBookings);\r\n        console.log(\"Total past bookings \" + pastBookings.length);\r\n        console.log(\"Total upcoming bookings \" + upcomingBookings.length);\r\n    };\r\n\r\n    return (\r\n        <Container md={9}>\r\n            <h2>All Bookings</h2>\r\n            <span>\r\n                *<i>Standard Check-in time is 12 PM and Checkout is 10 AM</i>\r\n            </span>\r\n            <hr />\r\n            <Tabs defaultActiveKey=\"ongoing\" fill>\r\n                <Tab eventKey=\"ongoing\" title=\"Upcoming/Ongoing\">\r\n                    {upcomingBookings.length === 0 ? (\r\n                        <span>No upcoming bookings</span>\r\n                    ) : (\r\n                        upcomingBookings.map((booking) => (\r\n                            <BookingDetailsCard\r\n                                booking={booking}\r\n                                type=\"upcoming\"\r\n                                key={booking.bookingNumber}\r\n                            />\r\n                        ))\r\n                    )}\r\n                </Tab>\r\n                <Tab eventKey=\"past\" title=\"Past\">\r\n                    {pastBookings.length === 0 ? (\r\n                        <span>No past bookings</span>\r\n                    ) : (\r\n                        pastBookings.map((booking) => (\r\n                            <BookingDetailsCard booking={booking} type=\"past\" />\r\n                        ))\r\n                    )}\r\n                </Tab>\r\n            </Tabs>\r\n            <hr />\r\n        </Container>\r\n    );\r\n}\r\n","D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\hotel\\RoomBooking.js",[],"D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\hotel\\Rooms.js",[],"D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\components\\Visualization\\Visualization.js",[],"D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\components\\Visualization\\Report.js",[],"D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\components\\Recommendations\\Preferences.jsx",[],"D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\components\\Recommendations\\Pass.jsx",["111"],"import { Navigate } from \"react-router-dom\";\r\nimport { isLoggedIn } from \"../../utility/common\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\n\r\nimport { AuthContext } from \"../../providers/AuthProvider\";\r\n\r\nconst Pass = () => {\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n    const [fields, setFields] = useState({\r\n        fromdate: \"\",\r\n        todate: \"\",\r\n        tour: \"\",\r\n        cost: \"\",\r\n        persons: \"\",\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (isLoggedIn()) {\r\n            axios({\r\n                method: \"get\",\r\n                mode: \"no-cors\",\r\n                url: \"https://mh990oc3p2.execute-api.us-east-1.amazonaws.com/test/user/tour\",\r\n                method: \"get\",\r\n                headers: {\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    \"Content-Type\": \"text/plain\",\r\n                },\r\n                params: {\r\n                    email: currentUser.email,\r\n                    // email: \"shivashanker208@gmail.com\",\r\n                },\r\n            })\r\n                .then((res) => {\r\n                    console.log(\"response\", res);\r\n                    setFields(res.data);\r\n                    if (res.data.tour.length > 0) {\r\n                        swal({\r\n                            title: \"Tour passes are ready!\",\r\n                            text: \"kindly check your information and enjoy your tour\",\r\n                            icon: \"info\",\r\n                            timer: 3000,\r\n                            buttons: false,\r\n                        });\r\n                    } else {\r\n                        swal({\r\n                            title: \"No tours found\",\r\n                            text: \"Tour information not found in the database, please submit your preferences to generate a tour pass.\",\r\n                            icon: \"warning\",\r\n                            timer: 3000,\r\n                            buttons: false,\r\n                        });\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.log(\"error\", error);\r\n                    swal({\r\n                        title: \"Unknown error\",\r\n                        text: \"We faced an error in retrieving your passes, please contact the administrator\",\r\n                        icon: \"error\",\r\n                        timer: 3000,\r\n                        buttons: false,\r\n                    });\r\n                });\r\n        }\r\n    });\r\n\r\n    if (!isLoggedIn()) {\r\n        swal({\r\n            title: \"Unauthorized User\",\r\n            text: \"Please login to check your tour passes\",\r\n            icon: \"warning\",\r\n            timer: 3000,\r\n            buttons: false,\r\n        });\r\n        return <Navigate to=\"/\" replace />;\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\" style={{ height: \"100vh\", display: \"flex\" }}>\r\n            <div\r\n                style={{\r\n                    // height: 756,\r\n                    // width: 1344,\r\n                    height: 702,\r\n                    width: 1248,\r\n                    // height: 648,\r\n                    // width: 1152,\r\n                    background: `url(\"https://res.cloudinary.com/hackerrank/image/upload/c_pad,b_auto:predominant,fl_preserve_transparency//v1658150645/pass_qhmach.jpg\")`,\r\n                    // backgroundSize: \"1134px 756px\",\r\n                    // backgroundSize: \"1152px 648px\",\r\n                    backgroundSize: \"1248px 702px\",\r\n                    // backgroundSize: \"960px 540px\",\r\n                    // height: 540,\r\n                    // width: 960,\r\n                    margin: \"auto\",\r\n                    color: \"#FFB93F\",\r\n                    // color: \"#FFF\",\r\n                    // marginTop: \"100px\",\r\n                    // padding: \"150px 150px 0 200px\",\r\n                    padding: \"175px 150px 0 200px\",\r\n                    fontSize: 22,\r\n                }}\r\n            >\r\n                <div style={{ verticalAlign: \"middle\" }}>\r\n                    <div className=\"row mb-5\">\r\n                        <div className=\"col\">\r\n                            <div className=\"form-outline\">\r\n                                <label className=\"form-label\">\r\n                                    First name :{\" \" + currentUser.firstName}\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <div className=\"form-outline\">\r\n                                <label className=\"form-label\">\r\n                                    Last name :{\" \" + currentUser.lastName}\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-outline mb-5\">\r\n                        <label className=\"form-label\">\r\n                            Company name : B&B Tour Services\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div className=\"form-outline mb-5\">\r\n                        <label className=\"form-label\">\r\n                            Tour Package : {\" \" + fields.tour}\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div className=\"form-outline mb-5\">\r\n                        <label className=\"form-label\">\r\n                            Total Number of Persons : {\" \" + fields.persons}\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div className=\"form-outline mb-5\">\r\n                        <label className=\"form-label\">\r\n                            Cost : {\" \" + fields.cost + \" per person\"}\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"form-outline\">\r\n                                <label className=\"form-label\">\r\n                                    Valid From : {\" \" + fields.fromdate}\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <div className=\"form-outline\">\r\n                                <label className=\"form-label\">\r\n                                    Valid To : {\" \" + fields.todate}\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pass;\r\n","D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\components\\Footer\\Footer.jsx",[],"D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\components\\Feedback\\Feedback.jsx",["112","113","114"],"import \"bootstrap/dist/css/bootstrap.css\";\r\nimport { useState, useContext } from \"react\";\r\nimport { Navigate, useNavigate, useParams } from \"react-router-dom\";\r\nimport { isLoggedIn } from \"../../utility/common\";\r\nimport * as HotelMgmtConstants from '../../hotel/HotelMgmtConstants';\r\nimport Axios from \"axios\";\r\nimport {\r\n    TextField,\r\n    Stack,\r\n    Button,\r\n} from \"@mui/material\";\r\n\r\n\r\nconst Feedback = () => {\r\n    const navigate = useNavigate();\r\n    const [fields, setFields] = useState({\r\n        title: \"\",\r\n        description: \"\",\r\n    });\r\n\r\n    let param = useParams();\r\n    const bookingNumber = param.bookingNumber;\r\n    console.log(\"The booking Number is \" + bookingNumber);\r\n\r\n    const handleFieldsChange = (e) => {\r\n        const { currentTarget: input } = e;\r\n        let fieldsObj = { ...fields };\r\n        if (input === undefined || input === null)\r\n            fieldsObj[e.target.name] = e.target.value;\r\n        else fieldsObj[input.name] = input.value;\r\n        setFields(fieldsObj);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const userId = \"Akanksha_Singh_2022-07-20T21:58:12.553Z\";        \r\n        const createFeedbackUrl = HotelMgmtConstants.customerApiBaseUrl + \"/user/feedback\";\r\n        const feedback = {\r\n            userId: userId,\r\n            header: fields.title,\r\n            body: fields.description,\r\n            bookingNumber: bookingNumber\r\n        }\r\n        console.log(feedback);\r\n\r\n        Axios\r\n        .post(createFeedbackUrl, feedback)\r\n        .then((response) => {\r\n            if (response.status === 201) {\r\n                alert(\"Feedback saved successfully\") \r\n                navigate(\"/user/bookings\")\r\n            }\r\n        })\r\n        .catch((error) => alert(\"Error in saving the feedback, please try again later\"));\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row d-flex justify-content-center\">\r\n                <div\r\n                    className=\"bg-dark p-2 mt-5\"\r\n                    style={{\r\n                        borderRadius: \"15px\",\r\n                    }}\r\n                >\r\n                    <h3\r\n                        style={{\r\n                            color: \"white\",\r\n                            textAlign: \"center\",\r\n                        }}\r\n                    >\r\n                        Your Feedback is valuable for us to improve our services\r\n                        to serve you better\r\n                    </h3>\r\n                </div>\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <div style={{ paddingLeft: \"25px\", marginTop: \"15px\" }}>\r\n\r\n                <TextField sx={{\r\n                        width: \"100%\",\r\n                    }}\r\n                    disabled\r\n                    id=\"filled-disabled\"\r\n                    label=\"Booking Number\"\r\n                    defaultValue={bookingNumber}\r\n                \r\n                />\r\n            </div>\r\n            <br />\r\n            <div style={{ paddingLeft: \"25px\", marginTop: \"15px\" }}>\r\n                <TextField\r\n                    id=\"title\"\r\n                    name=\"title\"\r\n                    label=\"Feedback Title\"\r\n                    variant=\"outlined\"\r\n                    placeholder=\"Ex: Good Food services from kitchen\"\r\n                    fullWidth\r\n                    value={fields.name}\r\n                    onChange={handleFieldsChange}\r\n                />\r\n            </div>\r\n            <br />\r\n            <div style={{ paddingLeft: \"25px\", marginTop: \"15px\" }}>\r\n                <TextField\r\n                    id=\"description\"\r\n                    name=\"description\"\r\n                    label=\"Detailed Feedback\"\r\n                    multiline\r\n                    rows={6}\r\n                    placeholder=\"Ex: Kitchen is fully loaded with a wide variety of food items. especially the italian cuisine is the best\"\r\n                    fullWidth\r\n                    value={fields.description}\r\n                    onChange={handleFieldsChange}\r\n                />\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <div\r\n                className=\"d-flex justify-content-center\"\r\n                style={{ paddingLeft: \"25px\", marginTop: \"15px\" }}\r\n            >\r\n                <Stack\r\n                    spacing={5}\r\n                    direction=\"row\"\r\n                    sx={{ width: \"fit-content\" }}\r\n                >\r\n                    <Button\r\n                        sx={{ backgroundColor: \"black\", color: \"white\" }}\r\n                        variant=\"contained\"\r\n                        onClick={handleSubmit}\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n                    <Button\r\n                        sx={{ backgroundColor: \"gray\", color: \"white\" }}\r\n                        variant=\"contained\"\r\n                        onClick={() => {\r\n                            navigate(\"/feed/posts\");\r\n                        }}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                </Stack>\r\n            </div>\r\n            <br />\r\n            <br />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Feedback;\r\n","D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\components\\Login\\index.js",[],"D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\components\\Navbar\\index.js",[],"D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\components\\Signup\\index.js",["115"],"import { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { CognitoUserAttribute } from \"amazon-cognito-identity-js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, FormGroup, Input, Button, Row, Col, Alert } from \"reactstrap\";\r\n\r\nimport AuthWrapper from \"../AuthWrapper\";\r\nimport { AuthContext } from \"../../providers/AuthProvider\";\r\nimport { AUTH_LAMBDA_URL, securityQuestions } from \"../../utility/constants\";\r\nimport { generateCeasarCipherKey } from \"../../utility/common\";\r\n\r\nconst Signup = () => {\r\n  const { getUserPool } = useContext(AuthContext);\r\n\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [userDetails, setUserDetails] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    securityQuestion: \"\",\r\n    securityAnswer: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setSuccessMessage(\"\");\r\n    };\r\n  }, []);\r\n\r\n  // save user's security question answer\r\n  const postSecurityQnA = async (data) => {\r\n    return await new Promise(async (resolve, reject) => {\r\n      try {\r\n        const res = await axios.post(AUTH_LAMBDA_URL, data);\r\n        resolve(res);\r\n      } catch (err) {\r\n        console.log(\"postSecurityQnA: \", err);\r\n        reject(err);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    setUserDetails((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSignupClick = async (e) => {\r\n    e.preventDefault();\r\n    if (!firstName) {\r\n      return setErrorMessage(\"First name is required.\");\r\n    }\r\n    if (!lastName) {\r\n      return setErrorMessage(\"Last name is required.\");\r\n    }\r\n    if (!email) {\r\n      return setErrorMessage(\"Email address is required.\");\r\n    }\r\n    if (!password) {\r\n      return setErrorMessage(\"Password is required.\");\r\n    }\r\n    if (!securityQuestion) {\r\n      return setErrorMessage(\"Security question is required.\");\r\n    }\r\n    if (!securityAnswer) {\r\n      return setErrorMessage(\"Security answer is required.\");\r\n    }\r\n    setErrorMessage(\"\");\r\n\r\n    const userId = `${firstName}_${lastName}_${new Date().valueOf()}`;\r\n    const ceasarKey = generateCeasarCipherKey();\r\n\r\n    const attributeList = [\r\n      new CognitoUserAttribute({\r\n        Name: \"custom:userId\",\r\n        Value: userId,\r\n      }),\r\n      new CognitoUserAttribute({\r\n        Name: \"email\",\r\n        Value: email,\r\n      }),\r\n      new CognitoUserAttribute({\r\n        Name: \"name\",\r\n        Value: firstName,\r\n      }),\r\n      new CognitoUserAttribute({\r\n        Name: \"family_name\",\r\n        Value: lastName,\r\n      }),\r\n    ];\r\n\r\n    const UserPool = getUserPool();\r\n    UserPool.signUp(\r\n      email,\r\n      password,\r\n      attributeList,\r\n      null,\r\n      async (err, result) => {\r\n        if (err) {\r\n          return setErrorMessage(err.message || JSON.stringify(err));\r\n        }\r\n        const cognitoUser = result.user;\r\n        console.log(\"user name is \" + cognitoUser.getUsername());\r\n\r\n        try {\r\n          const res = await postSecurityQnA({\r\n            type: \"save\",\r\n            userId,\r\n            securityQuestion,\r\n            securityAnswer: securityAnswer.toLowerCase(),\r\n            ceasarKey,\r\n          });\r\n          if (res.data.statusCode === 201) {\r\n            setSuccessMessage(\r\n              `<div>Your <b>Ceasar Cipher Key</b> for future multi-factor authentication is <b>${ceasarKey}</b>. \r\n             Please make sure you do not forget it.</div>`\r\n            );\r\n          } else {\r\n            setErrorMessage(\r\n              \"Something went wrong, please try again after sometime.\"\r\n            );\r\n          }\r\n        } catch (err) {\r\n          setErrorMessage(err.message);\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  const {\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    password,\r\n    securityQuestion,\r\n    securityAnswer,\r\n  } = userDetails;\r\n\r\n  return (\r\n    <AuthWrapper title=\"Sign up\">\r\n      {!!successMessage ? (\r\n        <>\r\n          <h5 className=\"my-2\"></h5>\r\n          <Alert color=\"success\" className=\"mb-2\">\r\n            Success! Your registration has been completed successfully.\r\n            <div\r\n              className=\"mt-2\"\r\n              dangerouslySetInnerHTML={{ __html: successMessage }}\r\n            ></div>\r\n          </Alert>\r\n          <div className=\"mb-2\">\r\n            We have sent you a mail for confirmation of your account, please\r\n            click on the link in the mail to confirm your account.\r\n          </div>\r\n          <div className=\"mb-2\">\r\n            If you have already confirmed your account, please{\" \"}\r\n            {<Link to=\"/login\">login</Link>} to your account!\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <Form className=\"auth-form\" onSubmit={handleSignupClick}>\r\n          {errorMessage && <Alert color=\"danger\">{errorMessage}</Alert>}\r\n          <Row>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Input\r\n                  id=\"firstName\"\r\n                  name=\"firstName\"\r\n                  placeholder=\"First name\"\r\n                  type=\"text\"\r\n                  value={firstName}\r\n                  onChange={handleChange}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Input\r\n                  id=\"lastName\"\r\n                  name=\"lastName\"\r\n                  placeholder=\"Last name\"\r\n                  type=\"text\"\r\n                  value={lastName}\r\n                  onChange={handleChange}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <FormGroup>\r\n            <Input\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email address\"\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={handleChange}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Input\r\n              id=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={handleChange}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Input\r\n              id=\"securityQuestion\"\r\n              name=\"securityQuestion\"\r\n              placeholder=\"Password\"\r\n              type=\"select\"\r\n              value={securityQuestion}\r\n              onChange={handleChange}\r\n            >\r\n              <option value=\"\">Select security question</option>\r\n              {securityQuestions.map((que, i) => (\r\n                <option key={i} value={que}>\r\n                  {que}\r\n                </option>\r\n              ))}\r\n            </Input>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Input\r\n              id=\"securityAnswer\"\r\n              name=\"securityAnswer\"\r\n              placeholder=\"Security answer\"\r\n              type=\"password\"\r\n              value={securityAnswer}\r\n              onChange={handleChange}\r\n            />\r\n          </FormGroup>\r\n          <Button color=\"dark\" type=\"submit\" className=\"auth-button\">\r\n            Sign up\r\n          </Button>\r\n          <div className=\"auth-link-wrapper\">\r\n            <span></span>\r\n            <Link to=\"/login\">Already have an account? Sign in</Link>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </AuthWrapper>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\hotel\\HotelMgmtConstants.js",[],"D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\hotel\\BookingDetailsCard.js",[],"D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\hotel\\RoomType.js",[],"D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\utility\\constants.js",[],"D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\utility\\common.js",[],"D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\hotel\\BookingInvoice.js",[],"D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\components\\AuthWrapper\\index.js",[],"D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\components\\SecurityQnA\\index.js",[],"D:\\Projects\\assignments\\Serverless\\new\\csci-5410-s22-g9\\Web Application\\src\\components\\CeasarCipher\\index.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":22,"column":6,"nodeType":"122","endLine":22,"endColumn":8,"suggestions":"123"},{"ruleId":"124","severity":1,"message":"125","line":3,"column":32,"nodeType":"126","messageId":"127","endLine":3,"endColumn":35},{"ruleId":"124","severity":1,"message":"128","line":3,"column":37,"nodeType":"126","messageId":"127","endLine":3,"endColumn":40},{"ruleId":"120","severity":1,"message":"129","line":41,"column":8,"nodeType":"122","endLine":41,"endColumn":10,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":47,"column":32,"nodeType":"133","messageId":"134","endLine":47,"endColumn":34},{"ruleId":"135","severity":1,"message":"136","line":27,"column":17,"nodeType":"137","messageId":"138","endLine":27,"endColumn":23},{"ruleId":"124","severity":1,"message":"139","line":2,"column":20,"nodeType":"126","messageId":"127","endLine":2,"endColumn":30},{"ruleId":"124","severity":1,"message":"140","line":3,"column":10,"nodeType":"126","messageId":"127","endLine":3,"endColumn":18},{"ruleId":"124","severity":1,"message":"141","line":4,"column":10,"nodeType":"126","messageId":"127","endLine":4,"endColumn":20},{"ruleId":"142","severity":1,"message":"143","line":144,"column":11,"nodeType":"144","endLine":144,"endColumn":32},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUserData'. Either include it or remove the dependency array.","ArrayExpression",["147"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","React Hook useEffect has missing dependencies: 'currentUser' and 'navigate'. Either include them or remove the dependency array.",["148"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-dupe-keys","Duplicate key 'method'.","ObjectExpression","unexpected","'useContext' is defined but never used.","'Navigate' is defined but never used.","'isLoggedIn' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},"Update the dependencies array to be: [getUserData]",{"range":"153","text":"154"},"Update the dependencies array to be: [currentUser, navigate]",{"range":"155","text":"156"},[490,492],"[getUserData]",[1667,1669],"[currentUser, navigate]"]